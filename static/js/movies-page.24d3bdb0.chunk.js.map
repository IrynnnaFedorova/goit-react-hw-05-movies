{"version":3,"file":"static/js/movies-page.24d3bdb0.chunk.js","mappings":"0NACA,EAAkE,0BAAlE,EAAoG,2BAApG,EAAwI,4B,kBC0CxI,MAvCA,SAAqBA,GACjB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAqBA,OAAO,kBAAMC,UAAWC,EAAQC,SAfX,SAAAC,GAGjB,GAFAA,EAAMC,iBAEqB,KAAvBN,EAAYO,OAIZ,OAFAN,EAAe,IAERO,EAAAA,GAAAA,KAAW,2BAGtBV,EAAMM,SAASJ,GAEfC,EAAe,KAGZ,WACH,kBACIC,UAAWC,EACXM,KAAK,OACLC,aAAa,MACbC,KAAK,cACLC,YAAY,kBACZC,MAAOb,EACPc,SA3BwB,SAAAT,GAC5BJ,EAAeI,EAAMU,cAAcF,MAAMG,mBA6BzC,mBAAQP,KAAK,SAASP,UAAWC,EAAjC,UACI,cAAGD,UAAU,uB,oCC7BV,SAASe,EAAT,GAA0C,IAAfjB,EAAc,EAAdA,YACtC,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOmB,EAAP,KAAeC,EAAf,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACc,KAAhBpB,IAIJqB,EAAAA,EAAAA,IAAYrB,GACPsB,MAAK,SAAAC,GACF,KAAIA,EAAKC,cAAgB,GAMrB,OADAL,EAAU,IACHX,EAAAA,GAAAA,MAAY,4EALnBW,GAAUM,EAAAA,EAAAA,GAAeF,EAAKG,eAQ3C,CAAC1B,KAIG,SAAC2B,EAAA,EAAD,WACH,SAACC,EAAA,EAAD,CAAgBL,KAAOL,MCzBhB,SAASW,IAAc,IAAD,EACjC,GAAsC9B,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAGM6B,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAK,UAAG,IAAIC,gBAAgBH,EAASI,QAAQC,IAAI,gBAA5C,QAAwD,GAoBnE,OANAjB,EAAAA,EAAAA,YAAU,WACQ,KAAVc,GACAjC,EAAeiC,KAEpB,CAACA,KAEG,UAACI,EAAA,EAAD,YACH,SAAC,EAAD,CAAalC,SAlBI,SAAAmC,GACjB,GAAIvC,IAAgBuC,EAChB,OAAO/B,EAAAA,GAAAA,KAAW,2BAGtBsB,EAAS,GAAD,OAAIE,EAASQ,SAAb,kBAA+BD,IAEvCtC,EAAesC,OAYf,SAACtB,EAAD,CAAkBjB,YAAcA","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesPage/SearchField/SearchField.module.css?8a9e","components/MoviesPage/SearchField/SearchField.jsx","components/MoviesPage/MoviesSearchList/MoviesSearchList.jsx","components/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"SearchField_searchbar__Rlnv3\",\"form\":\"SearchField_form__Q0kVN\",\"input\":\"SearchField_input__iCZeT\",\"button\":\"SearchField_button__WHvPx\"};","import { useState } from 'react';\nimport s from './SearchField.module.css';\nimport { toast } from 'react-toastify';\n\nfunction SearchField(props) {\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const handleSearchQueryChange = event => {\n        setSearchQuery(event.currentTarget.value.toLowerCase());\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        if (searchQuery.trim() === '') {\n            \n            setSearchQuery('');\n\n            return toast.info(\"Input your search query\");\n        }\n\n        props.onSubmit(searchQuery);\n        \n        setSearchQuery('');\n    }\n\n    return <form className={s.form} onSubmit={handleSubmit}>\n        <input\n            className={s.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            name=\"searchQuery\"\n            placeholder=\"Search movie...\"\n            value={searchQuery}\n            onChange={handleSearchQueryChange}\n        />\n        \n        <button type=\"submit\" className={s.button}>\n            <i className=\"fa fa-search\"></i>\n        </button>\n    </form>\n}\n\nexport default SearchField;","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from '../../../services/movies-api';\nimport MoviesList from '../../MoviesList';\nimport MoviesListItem from '../../MoviesListItem';\nimport normalizedData from '../../../services/normalized-data';\n//import s from './MoviesSearchList.module.css';\nimport { toast } from 'react-toastify';\n\nexport default function MoviesSearchList({searchQuery}) {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        if (searchQuery === '') {\n            return;\n        }\n\n        fetchMovies(searchQuery)\n            .then(data => {\n                if (data.total_results > 0) {\n                    setMovies(normalizedData(data.results));\n                }\n\n                else {\n                    setMovies([]);\n                    return toast.error(\"Sorry, there are no images matching your search query. Please try again.\");\n                }\n            });\n    }, [searchQuery])\n\n\n        \n    return <MoviesList>\n        <MoviesListItem data={ movies }/>\n    </MoviesList>\n}\n\nMoviesSearchList.propTypes = {\n    searchQuery: PropTypes.string,\n}","import { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport Container from '../Container';\nimport SearchField from './SearchField';\nimport MoviesSearchList from './MoviesSearchList';\nimport { toast } from 'react-toastify';\n//import s from './MoviesPage.module.css';\n\nexport default function MoviesPage() {\n    const [searchQuery, setSearchQuery] = useState('');\n\n    // Catching search query from address bar\n    const navigate = useNavigate();\n    const location = useLocation();\n    const query = new URLSearchParams(location.search).get('query') ?? '';\n\n    // Catching search query from search bar input field\n    const handleSubmit = searchQueryValue => {\n        if (searchQuery === searchQueryValue) {\n            return toast.info(\"Input new search query.\");\n        }\n\n        navigate(`${location.pathname}?query=${searchQueryValue}`);\n\n        setSearchQuery(searchQueryValue);\n    }\n\n    // Setting search query from address bar\n    useEffect(() => {\n        if (query !== '') {\n            setSearchQuery(query);\n        }\n    }, [query])\n\n    return <Container>\n        <SearchField onSubmit={handleSubmit}/>\n        <MoviesSearchList searchQuery={ searchQuery }/>\n    </Container>\n}\n"],"names":["props","useState","searchQuery","setSearchQuery","className","s","onSubmit","event","preventDefault","trim","toast","type","autoComplete","name","placeholder","value","onChange","currentTarget","toLowerCase","MoviesSearchList","movies","setMovies","useEffect","fetchMovies","then","data","total_results","normalizedData","results","MoviesList","MoviesListItem","MoviesPage","navigate","useNavigate","location","useLocation","query","URLSearchParams","search","get","Container","searchQueryValue","pathname"],"sourceRoot":""}